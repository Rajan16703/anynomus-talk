{"ast":null,"code":"var _jsxFileName = \"/workspace/anynomus-talk/client/src/context/SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user,\n    token\n  } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [chatStatus, setChatStatus] = useState('idle'); // idle, searching, connected, ended\n\n  useEffect(() => {\n    if (user && token) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          token: token\n        },\n        transports: ['websocket', 'polling']\n      });\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        setSocket(newSocket);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n        setChatStatus('idle');\n        setCurrentChat(null);\n        setMessages([]);\n      });\n      newSocket.on('connect_error', error => {\n        console.error('Connection error:', error);\n        toast.error('Failed to connect to chat server');\n        setConnected(false);\n      });\n\n      // Chat events\n      newSocket.on('waiting_for_partner', data => {\n        setChatStatus('searching');\n        setCurrentChat(data.chatId);\n        setMessages([]);\n        toast.success(data.message);\n      });\n      newSocket.on('chat_found', data => {\n        setChatStatus('connected');\n        setCurrentChat(data.chatId);\n      });\n      newSocket.on('chat_started', data => {\n        setChatStatus('connected');\n        toast.success(data.message);\n        setMessages([{\n          id: 'system-start',\n          message: data.message,\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        }]);\n      });\n      newSocket.on('new_message', data => {\n        setMessages(prev => [...prev, {\n          ...data,\n          isOwn: false\n        }]);\n      });\n      newSocket.on('message_sent', data => {\n        setMessages(prev => [...prev, {\n          ...data,\n          isOwn: true\n        }]);\n      });\n      newSocket.on('user_typing', data => {\n        setIsTyping(data.typing);\n        if (data.typing) {\n          setTimeout(() => setIsTyping(false), 3000);\n        }\n      });\n      newSocket.on('chat_ended', data => {\n        setChatStatus('ended');\n        setIsTyping(false);\n        toast.info(data.message);\n        setMessages(prev => [...prev, {\n          id: 'system-end',\n          message: data.message,\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        }]);\n      });\n      newSocket.on('report_submitted', data => {\n        toast.success(data.message);\n      });\n      newSocket.on('error', data => {\n        toast.error(data.message);\n      });\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n        setChatStatus('idle');\n        setCurrentChat(null);\n        setMessages([]);\n      };\n    }\n  }, [user, token]);\n  const findChat = (interests = []) => {\n    if (socket && connected) {\n      setChatStatus('searching');\n      setMessages([]);\n      socket.emit('find_chat', {\n        interests\n      });\n    }\n  };\n  const sendMessage = message => {\n    if (socket && connected && currentChat && message.trim()) {\n      socket.emit('send_message', {\n        chatId: currentChat,\n        message: message.trim()\n      });\n    }\n  };\n  const skipChat = (reason = 'user_skipped') => {\n    if (socket && connected && currentChat) {\n      socket.emit('skip_chat', {\n        chatId: currentChat,\n        reason\n      });\n      setChatStatus('idle');\n      setCurrentChat(null);\n      setMessages([]);\n      setIsTyping(false);\n    }\n  };\n  const reportUser = (reason, description = '') => {\n    if (socket && connected && currentChat) {\n      socket.emit('report_user', {\n        chatId: currentChat,\n        reason,\n        description\n      });\n    }\n  };\n  const startTyping = () => {\n    if (socket && connected && currentChat) {\n      socket.emit('typing_start', {\n        chatId: currentChat\n      });\n    }\n  };\n  const stopTyping = () => {\n    if (socket && connected && currentChat) {\n      socket.emit('typing_stop', {\n        chatId: currentChat\n      });\n    }\n  };\n  const value = {\n    socket,\n    connected,\n    currentChat,\n    messages,\n    isTyping,\n    chatStatus,\n    findChat,\n    sendMessage,\n    skipChat,\n    reportUser,\n    startTyping,\n    stopTyping,\n    setMessages,\n    setChatStatus\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"s896rI8TGbTv8H58mNbWdvHb2Z8=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","user","token","socket","setSocket","connected","setConnected","currentChat","setCurrentChat","messages","setMessages","isTyping","setIsTyping","chatStatus","setChatStatus","newSocket","process","env","REACT_APP_SOCKET_URL","auth","transports","on","console","log","error","data","chatId","success","message","id","timestamp","Date","toISOString","isSystem","prev","isOwn","typing","setTimeout","info","close","findChat","interests","emit","sendMessage","trim","skipChat","reason","reportUser","description","startTyping","stopTyping","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/anynomus-talk/client/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const { user, token } = useAuth();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [chatStatus, setChatStatus] = useState('idle'); // idle, searching, connected, ended\n\n  useEffect(() => {\n    if (user && token) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          token: token\n        },\n        transports: ['websocket', 'polling']\n      });\n\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n        setSocket(newSocket);\n      });\n\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n        setChatStatus('idle');\n        setCurrentChat(null);\n        setMessages([]);\n      });\n\n      newSocket.on('connect_error', (error) => {\n        console.error('Connection error:', error);\n        toast.error('Failed to connect to chat server');\n        setConnected(false);\n      });\n\n      // Chat events\n      newSocket.on('waiting_for_partner', (data) => {\n        setChatStatus('searching');\n        setCurrentChat(data.chatId);\n        setMessages([]);\n        toast.success(data.message);\n      });\n\n      newSocket.on('chat_found', (data) => {\n        setChatStatus('connected');\n        setCurrentChat(data.chatId);\n      });\n\n      newSocket.on('chat_started', (data) => {\n        setChatStatus('connected');\n        toast.success(data.message);\n        setMessages([{\n          id: 'system-start',\n          message: data.message,\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        }]);\n      });\n\n      newSocket.on('new_message', (data) => {\n        setMessages(prev => [...prev, {\n          ...data,\n          isOwn: false\n        }]);\n      });\n\n      newSocket.on('message_sent', (data) => {\n        setMessages(prev => [...prev, {\n          ...data,\n          isOwn: true\n        }]);\n      });\n\n      newSocket.on('user_typing', (data) => {\n        setIsTyping(data.typing);\n        if (data.typing) {\n          setTimeout(() => setIsTyping(false), 3000);\n        }\n      });\n\n      newSocket.on('chat_ended', (data) => {\n        setChatStatus('ended');\n        setIsTyping(false);\n        toast.info(data.message);\n        setMessages(prev => [...prev, {\n          id: 'system-end',\n          message: data.message,\n          timestamp: new Date().toISOString(),\n          isSystem: true\n        }]);\n      });\n\n      newSocket.on('report_submitted', (data) => {\n        toast.success(data.message);\n      });\n\n      newSocket.on('error', (data) => {\n        toast.error(data.message);\n      });\n\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n        setChatStatus('idle');\n        setCurrentChat(null);\n        setMessages([]);\n      };\n    }\n  }, [user, token]);\n\n  const findChat = (interests = []) => {\n    if (socket && connected) {\n      setChatStatus('searching');\n      setMessages([]);\n      socket.emit('find_chat', { interests });\n    }\n  };\n\n  const sendMessage = (message) => {\n    if (socket && connected && currentChat && message.trim()) {\n      socket.emit('send_message', {\n        chatId: currentChat,\n        message: message.trim()\n      });\n    }\n  };\n\n  const skipChat = (reason = 'user_skipped') => {\n    if (socket && connected && currentChat) {\n      socket.emit('skip_chat', {\n        chatId: currentChat,\n        reason\n      });\n      setChatStatus('idle');\n      setCurrentChat(null);\n      setMessages([]);\n      setIsTyping(false);\n    }\n  };\n\n  const reportUser = (reason, description = '') => {\n    if (socket && connected && currentChat) {\n      socket.emit('report_user', {\n        chatId: currentChat,\n        reason,\n        description\n      });\n    }\n  };\n\n  const startTyping = () => {\n    if (socket && connected && currentChat) {\n      socket.emit('typing_start', { chatId: currentChat });\n    }\n  };\n\n  const stopTyping = () => {\n    if (socket && connected && currentChat) {\n      socket.emit('typing_stop', { chatId: currentChat });\n    }\n  };\n\n  const value = {\n    socket,\n    connected,\n    currentChat,\n    messages,\n    isTyping,\n    chatStatus,\n    findChat,\n    sendMessage,\n    skipChat,\n    reportUser,\n    startTyping,\n    stopTyping,\n    setMessages,\n    setChatStatus\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}